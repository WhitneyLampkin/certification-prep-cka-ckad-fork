apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: timeout
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-app-cm
  namespace: timeout
data:
  default.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            #root   /usr/share/nginx/html;
            #index  index.html index.htm;
            echo_sleep 5;
            echo 'OK';
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            #root   /usr/share/nginx/html;
            return 503 "Bad\n";
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx-app
    version: v1
  name: nginx-app-v1
  namespace: timeout
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-app
      version: v1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-app
        version: v1
    spec:
      volumes:
      - name: html
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: nginx-app-cm
      initContainers:
      - name: init-2
        image: busybox
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command: ['sh', '-c', 'echo "Error in $(MY_POD_NAME) in $(MY_NAMESPACE)" > /usr/share/nginx/html/50x.html']
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      - name: init
        image: busybox
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command: ['sh', '-c', 'echo "Welcome to: $(MY_POD_NAME) in $(MY_NAMESPACE)" > /usr/share/nginx/html/index.html']
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      containers:
      - image: openresty/openresty
        name: nginx-app
        resources: {}
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          #subPath: nginx.conf
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: nginx-app
  name: nginx-app
  namespace: timeout
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx-app
